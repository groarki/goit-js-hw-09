{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// 1. Оголоси поза будь - якими функціями об’єкт formData з полями email та message, які спочатку мають порожні рядки як значення: { email: \"\", message: \"\" }.\n\n// 2. Використовуй метод делегування для відстеження змін у формі через подію input.Зберігай актуальні дані з полів email\n// та message у formData та записуй цей об’єкт у локальне сховище.Використовуй ключ \"feedback-form-state\" для зберігання даних у сховищі.\n\n// 3. При завантаженні сторінки перевір, чи є дані у локальному сховищі.Якщо так, використовуй їх для заповнення форми\n// та об'єкта formData. Якщо ні, залиш поля форми порожніми.\n\n// 4. Перед відправленням форми переконайся, що обидва поля форми заповнені.\n// 5. Якщо будь - яке з полів(властивостей об’єкта formData) порожнє, показуй сповіщення з текстом «Fill please all fields».\n\n// 6. Якщо всі поля заповнені, виведи у консоль об’єкт formData з актуальними значеннями, очисти локальне сховище, об’єкт formData і поля форми.\n\n// вибрати на сайті форму і на текстереа\n// поставити прослушку на сабміт\n// передати функцію5\nconst FORM_KEY = 'feedback-form-state';\n\nconst form = document.querySelector('.feedback-form');\nconst textarea = form.querySelector('textarea[name=\"message\"]');\nconst emailInput = form.querySelector('input[name=\"email\"]');\n\ngetStorage();\n\nform.addEventListener('submit', submitHandler);\nform.addEventListener('input', inputHandler);\n\nfunction getStorage() {\n  const storedMsg = localStorage.getItem(FORM_KEY);\n\n  if (!storedMsg) {\n    return;\n  }\n\n  const parsedForm = JSON.parse(storedMsg);\n  emailInput.value = parsedForm.email || '';\n  textarea.value = parsedForm.message || '';\n}\n\nconst formData = { email: '', message: '' };\n\nfunction inputHandler(event) {\n  formData[event.target.name] = event.target.value.trim();\n  localStorage.setItem(FORM_KEY, JSON.stringify(formData));\n}\n\nfunction submitHandler(event) {\n  event.preventDefault();\n  if (!emailInput.value || !textarea.value) {\n    return alert('Fill please all fields');\n  }\n\n  formData.email = emailInput.value.trim();\n  formData.message = textarea.value.trim();\n\n  console.log(formData);\n  localStorage.removeItem(FORM_KEY);\n\n  form.reset();\n}\n"],"names":["FORM_KEY","form","textarea","emailInput","getStorage","submitHandler","inputHandler","storedMsg","parsedForm","formData","event"],"mappings":"wFAgBA,MAAMA,EAAW,sBAEXC,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAWD,EAAK,cAAc,0BAA0B,EACxDE,EAAaF,EAAK,cAAc,qBAAqB,EAE3DG,IAEAH,EAAK,iBAAiB,SAAUI,CAAa,EAC7CJ,EAAK,iBAAiB,QAASK,CAAY,EAE3C,SAASF,GAAa,CACpB,MAAMG,EAAY,aAAa,QAAQP,CAAQ,EAE/C,GAAI,CAACO,EACH,OAGF,MAAMC,EAAa,KAAK,MAAMD,CAAS,EACvCJ,EAAW,MAAQK,EAAW,OAAS,GACvCN,EAAS,MAAQM,EAAW,SAAW,EACzC,CAEA,MAAMC,EAAW,CAAE,MAAO,GAAI,QAAS,EAAE,EAEzC,SAASH,EAAaI,EAAO,CAC3BD,EAASC,EAAM,OAAO,IAAI,EAAIA,EAAM,OAAO,MAAM,OACjD,aAAa,QAAQV,EAAU,KAAK,UAAUS,CAAQ,CAAC,CACzD,CAEA,SAASJ,EAAcK,EAAO,CAE5B,GADAA,EAAM,eAAc,EAChB,CAACP,EAAW,OAAS,CAACD,EAAS,MACjC,OAAO,MAAM,wBAAwB,EAGvCO,EAAS,MAAQN,EAAW,MAAM,KAAI,EACtCM,EAAS,QAAUP,EAAS,MAAM,KAAI,EAEtC,QAAQ,IAAIO,CAAQ,EACpB,aAAa,WAAWT,CAAQ,EAEhCC,EAAK,MAAK,CACZ"}